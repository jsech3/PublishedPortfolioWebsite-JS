---
interface Repo {
  id: number;
  name: string;
  description: string | null;
  html_url: string;
  stargazers_count: number;
  language: string | null;
  updated_at: string;
  fork: boolean;
}

let repos: Repo[] = [];

try {
  const response = await fetch('https://api.github.com/users/jsech3/repos?sort=updated&per_page=100');
  const data = await response.json();

  // Filter out forks and sort by last updated
  repos = data
    .filter((repo: Repo) => !repo.fork)
    .sort((a: Repo, b: Repo) => new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime())
    .slice(0, 12); // Show max 12 repos
} catch (error) {
  console.error('Error fetching GitHub repos:', error);
}

const languageColors: { [key: string]: string } = {
  'JavaScript': 'bg-yellow-400',
  'Python': 'bg-blue-500',
  'TypeScript': 'bg-blue-600',
  'Java': 'bg-red-500',
  'HTML': 'bg-orange-500',
  'CSS': 'bg-purple-500',
  'Go': 'bg-cyan-500',
  'Rust': 'bg-orange-600',
};
---

{repos.length > 0 && (
  <div class="mt-16">
    <h2 class="text-3xl font-bold mb-8 gradient-text">All GitHub Repositories</h2>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {repos.map((repo) => (
        <a
          href={repo.html_url}
          target="_blank"
          rel="noopener noreferrer"
          class="group block bg-white dark:bg-gray-900 rounded-xl p-6 border border-mint-200 dark:border-gray-700 hover:shadow-xl hover:shadow-teal-500/20 dark:hover:shadow-purple-500/20 transition-all duration-300 hover:scale-105"
        >
          <div class="flex items-start justify-between mb-3">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white group-hover:text-teal-600 dark:group-hover:text-teal-400 transition-colors line-clamp-1">
              {repo.name}
            </h3>
            {repo.stargazers_count > 0 && (
              <div class="flex items-center text-gray-500 dark:text-gray-400 text-sm">
                <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                </svg>
                {repo.stargazers_count}
              </div>
            )}
          </div>

          <p class="text-gray-600 dark:text-gray-400 text-sm mb-4 line-clamp-2 min-h-[2.5rem]">
            {repo.description || 'No description available'}
          </p>

          <div class="flex items-center justify-between">
            {repo.language && (
              <div class="flex items-center text-sm text-gray-600 dark:text-gray-400">
                <span class={`w-3 h-3 rounded-full mr-2 ${languageColors[repo.language] || 'bg-gray-400'}`}></span>
                {repo.language}
              </div>
            )}
            <span class="text-xs text-gray-500 dark:text-gray-500">
              Updated {new Date(repo.updated_at).toLocaleDateString('en-US', { month: 'short', year: 'numeric' })}
            </span>
          </div>
        </a>
      ))}
    </div>
  </div>
)}
